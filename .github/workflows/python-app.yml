name: Python application

on:
  push:
    branches:
      - 'main'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          pytest

      - name: Send custom message on success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            New ${{ github.event_name }}, tests passed.

      - name: Send custom message on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            New ${{ github.event_name }}, tests failed.

  CD:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set ECR_REGISTRY variable
        id: set-ecr-registry
        run: echo "::set-output name=ECR_REGISTRY::$(aws ecr describe-repositories --repository-names dcs-forum --query 'repositories[0].repositoryUri' --output text)"

      - name: Print environment variables
        run: |
          echo "ECR_REGISTRY: ${{ steps.set-ecr-registry.outputs.ECR_REGISTRY }}"
          echo "ECR_REPOSITORY: dcs-forum"
          echo "IMAGE_TAG: ${{ github.sha }}"
          echo "PWD: $(pwd)"        
      - name: Build and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: public.ecr.aws/p1c7r0w5/dcs-forum
          ECR_REPOSITORY: dcs-forum
          IMAGE_TAG: ${{ github.sha }}
        
        run: |
          docker build -t dcs-forum . 
          docker push public.ecr.aws/p1c7r0w5/dcs-forum:latest

      - name: Send custom message on push
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Changes went to production.

      - name: Send custom message on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Push to production failed.
